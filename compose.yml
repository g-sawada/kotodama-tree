services:
  front:
    build:
      context: ./front
      dockerfile: Dockerfile.dev
    environment:
      TZ: Asia/Tokyo
      WATCHPACK_POLLING: true
    volumes:
      - ./front:/app:cached
      - front_node_modules:/app/node_modules
    command: yarn dev -p 4000
    networks:
      app-network:
        ipv4_address: 172.31.0.2
    ports:
      - "4000:4000"
  back:
    build:
      context: ./back
      dockerfile: Dockerfile.dev
    environment:
      RAILS_ENV: development
      TZ: Asia/Tokyo
    command: bash -c "rm -f tmp/pids/server.pid && bundle exec rails s -b '0.0.0.0'"
    volumes:
      - ./back:/app
      - back_bundle_data:/usr/local/bundle:cached
    depends_on:
      db:
        condition: service_healthy
    networks:
      app-network:
        ipv4_address: 172.31.0.3
    ports:
      - "3000:3000"
    tty: true
    stdin_open: true
  db:
    image: postgres:16.2
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_DB: practice_db
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d practice_db -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      app-network:
        ipv4_address: 172.31.0.4
volumes:
  back_bundle_data:
  postgres_data:
  front_node_modules:
networks:
  app-network:
    ipam:
      driver: default
      config:
        - subnet: 172.31.0.0/24